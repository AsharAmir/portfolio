services:
  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: portfolio
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ 'CMD-SHELL', 'pg_isready -U postgres' ]
      interval: 3s
      timeout: 1s
      retries: 5
    restart: always

  redis:
    image: redis:7-alpine
    volumes:
      - redis_data:/data
    healthcheck:
      test: [ 'CMD', 'redis-cli', 'ping' ]
      interval: 3s
      timeout: 1s
      retries: 5
    restart: always

  backend:
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/portfolio
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
    image: ktenman/portfolio-be:latest
    depends_on:
      - postgres
      - redis
    restart: always

  frontend:
    image: ktenman/portfolio-fe:latest
    depends_on:
      - backend
    restart: always

  apache:
    image: httpd:latest
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ./apache/site.conf:/usr/local/apache2/conf/site.conf
      - ./apache/htdocs:/usr/local/apache2/htdocs
    depends_on:
      - backend
      - frontend
    restart: always

  certbot:
    image: certbot/certbot:latest
    user: "1000:1000"
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
      - ./certbot/logs:/var/log/letsencrypt # Add this line to mount logs directory
    command: sh -c "chown -R 1000:1000 /etc/letsencrypt /var/www/certbot /var/log/letsencrypt && chmod -R 755 /etc/letsencrypt /var/www/certbot /var/log/letsencrypt"
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew --apache --apache-server-root /usr/local/apache2/conf/ --apache-webroot /var/www/certbot; sleep 12h & wait $${!}; done;'"
    restart: always

volumes:
  postgres_data:
  redis_data:
