services:
  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: portfolio
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ 'CMD-SHELL', 'pg_isready -U postgres' ]
      interval: 3s
      timeout: 1s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
    healthcheck:
      test: [ 'CMD', 'redis-cli', 'ping' ]
      interval: 3s
      timeout: 1s
      retries: 5

  backend:
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/portfolio
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
    build:
      context: .
      dockerfile: Dockerfile.backend
    ports:
      - '8080:8080'
    depends_on:
      - postgres
      - redis

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    depends_on:
      - backend

  app:
    image: nginx:alpine
    ports:
      - '61234:80'
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - frontend

volumes:
  postgres_data:
  redis_data:
